<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <title>Top of the Poops</title>
    <meta name="description" content="Analysing sewage dumps by water companies in the UK">

    {{> chunks/favicons }}
    {{> chunks/meta-styles }}
    {{> chunks/meta-scripts }}

    {{> components/meta-opengraph
            title="Homepage"
            twitterImageUri=share.twitterImageUri
    }}

    <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
{{> chunks/navbar }}

{{#> components/jumbotron }}
    At least <em>{{numberFormat totalCount}}</em> "sewage spills"
    into waterways in {{year}}, lasting
    {{numberFormat totalDuration.toHours}} hours
{{/components/jumbotron}}


<div class="container-fluid">
    <div class="row justify-content-md-center  align-items-center">
        <div class="col-md-4 offset-md-1">
            <img alt="A stylised map of England and Wales showing CSO locations" style="width: 100%; height: auto" src="/assets/images/top-of-the-poops-cso-2021-web-fs8.png"/>
        </div>
        <div class="col-md-4">
            <div class="row">
                <div class="col">
                    <div class="display-4">A Petri Dish for E.Coli</div>

                    <div class="display-6">Preliminary 2023 Data - Wales Missing</div>

                    <p>We are still updating our systems for 2023, so some overflows are not allocated into the system yet. The numbers will go up some more.</p>

                    <p>Here are all the CSOs in England and Wales that 'overflowed' in {{ year }} - dumping raw or
                        minimally treated sewage into fragile chalk streams, rivers, onto beaches and into shellfish
                        areas</p>
                    <p>Each colour represents a different Water Company, the size of each dot relates to how long each
                        overflow was polluting</p>
                    <p>The figures, supplied by the water companies themselves, understate the problem, as the data is
                        poorly collected by the
                        Water Companies, with monitoring defective or in many cases completely absent. Many recordings
                        of data
                        don't seem to be associated with a valid permit, so it is impossible to know where they are.</p>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    {{> components/share-facebook share}}
                    {{> components/share-twitter share}}
                </div>
            </div>
        </div>
    </div>
    <div class="row justify-content-md-center align-items-center">

        <div class="col-md-4  offset-md-2">
            <div class="display-4">Sewage everywhere</div>

            <div class="mb-3">
                <p>There is sewage overflowing into rivers in almost every constituency
                    across England and Wales. A very few miss out, simply because they donâ€™t
                    have any Combined Sewage Overflows. CSOs mix toilet sewage with rainwater and
                    then discharge it into rivers, creating a horrible environment for fish and other creatures - it
                    poisons them, and the rivers
                    die. You'll find all sorts of unsanitary sanitary products floating downstream.</p>

                <h4>Top of The Poops - Constituencies</h4>

                {{#each constituencyRankings}}
                    <div>
                        <b>{{this.rank}}.</b>
                        <a href="{{this.constituency.uri}}">{{this.constituency.name}}</a> {{numberFormat this.duration.hours}} hours
                    </div>
                {{/each}}
            </div>

            <a href="/constituencies">
                <button type="button" class="btn btn-primary">See all constituency rankings</button>
            </a>

        </div>
        <div class="col-md-6">
            <div id="map-constituency" class="sewage-map"></div>
        </div>
    </div>

    <div class="row justify-content-md-center align-items-center">
        <div class="col-md-6   offset-md-1">
            <div id="map-beaches" class="sewage-map"></div>
        </div>

        <div class="col-md-4">
            <div class="display-4">Swimming in sewage</div>

            <div class="mb-4">
                <p>Most, if not actually all, of the beaches and designated coastal bathing locations around England
                    and Wales are regular recipients of a good layer of sewage.</p>

                <p><b>Accuracy Warning</b> We use data from the water companies, but we are seeing many anomalies, that make us believe that
                bathing location information is quite poor. The situation is likely <b>far worse</b> than reported here.</p>

                <p>Water companies have a duty to report on the summer bathing season separately, and this made grim
                    reading
                    in 2022.
                    For more details check out <a href="https://www.sas.org.uk/waterquality2022/">Surfers Against Sewage
                        Water Quality Report 2022</a></p>

                <h4>Top of The Poops - Beaches</h4>

                {{#each beachRankings}}
                    <div>
                        <b>{{this.rank}}.</b>{{this.company.name}} - <a href="{{this.beach.uri}}">{{this.beach.name}}</a> {{numberFormat this.duration.hours}}
                        hours
                    </div>
                {{/each}}
            </div>
            <a href="/beaches">
                <button type="button" class="btn btn-primary">See all beach rankings</button>
            </a>
        </div>
    </div>


    <div class="row justify-content-md-center align-items-center">
        <div class="col-md-4   offset-md-2">
            <div class="display-4">Rivers & Streams</div>

            <div class="mb-4">
                <p>Of the 4700 rivers in England, few escape from sewage dumping</p>

                <p>On the image, you can see a map, in blue of all the rivers that escaped sewage in {{year}},
                    and in brown all the rivers that received more than 24 hours of sewage dumps.</p>

                <p>The 1100 or so rivers in Wales didn't escape, unfortunately, but Dwr Cymru don't include the
                    information in their reports
                    to enable us to draw the map very easily. Perhaps they will include it in 2023?</p>

                <h4>Top of The Poops - Rivers</h4>

                {{#each riverRankings}}
                    <div>
                        <b>{{this.rank}}.</b>{{this.company.name}} - <a
                            href="{{this.river.uri}}">{{this.river.name}}</a> {{numberFormat this.duration.hours}} hours
                    </div>
                {{/each}}
            </div>
            <a href="/rivers">
                <button type="button" class="btn btn-primary">See all river rankings</button>
            </a>
        </div>
        <div class="col-md-4 ">
            <img alt="A map of England and Wales showing major rivers" style="width: 100%; height: auto" src="/assets/images/top-of-the-poops-rivers-2021.png"/>
        </div>
    </div>


    <div class="row justify-content-md-center align-items-center">
        <div class="col-md-6   offset-md-1">
            <div id="map-shellfish" class="sewage-map"></div>
        </div>

        <div class="col-md-4">
            <div class="display-4">Sewage in the food chain?</div>

            <div class="mb-4">
                <p>Shellfish are sensitive to the quality of water that surrounds them, and as they filter the water, they can become contaminated
                with bacteria from the water around them.</p>

                <h4>Top of The Poops - Shellfish</h4>

                {{#each shellfishRankings}}
                    <div>
                        <b>{{this.rank}}.</b>{{this.company.name}} - <a href="{{this.shellfish.uri}}">{{this.shellfish.name}}</a> {{numberFormat this.duration.hours}}
                        hours
                    </div>
                {{/each}}
            </div>
            <a href="/shellfisheries">
                <button type="button" class="btn btn-primary">See all shellfish rankings</button>
            </a>
        </div>
    </div>

</div>

<div class="container">
    <div class="row">
        <div class="col">
            {{#> components/section title="Water Companies" }}
                <div class="row">
                    {{#each companies}}
                        <div class="col-sm-4 col-lg-3 mb-4">
                            {{> components/card-company this}}
                        </div>
                    {{/each}}
                </div>
            {{/components/section}}
        </div>
    </div>
</div>


<div class="container">
    <div class="row">
        <div class="col">
            {{#> components/section title="Top of the Poops in the Media" }}
                <div class="row row-cols-1 row-cols-md-4">
                        {{#each (take appearances n=8)}}
                            {{>components/card-media this}}
                        {{/each}}
                </div>

                <div class="row mt3 justify-content-end">
                    <div class="col-3">
                        <a href="/media">
                            <button type="button" class="btn btn-primary">See all our {{appearances.length}} media links</button>
                        </a>
                    </div>
                </div>
            {{/components/section}}
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col">{{> chunks/data-sources }}</div>
    </div>
</div>

{{> chunks/footer }}

<script type="module">

    import * as Plot from "https://cdn.jsdelivr.net/npm/@observablehq/plot@0.6/+esm";

    const formatNumber = (n, m) => n.toLocaleString(undefined, {
        minimumFractionDigits: m ? m : 0,
        maximumFractionDigits: m ? m : 0
    });

    const chart = (data) => document.getElementById("map-constituency").append(
            Plot.plot({
                projection: {
                    type: "mercator",
                    domain: {
                        type: "MultiPoint",
                        coordinates: [[-6, 49.9], [1.8, 55.9]],
                    },
                },
                width: 800,
                color: {
                    scheme: "oranges",
                },
                marks: [
                    Plot.geo(data, {
                        fill: d => d.properties.total_hours,
                        title: d => `${d.properties.constituency}: ${formatNumber(d.properties.total_hours)} hours of sewage`,
                        stroke: "black",
                        strokeOpacity: 0.5,
                    }),
                ]
            }));

    const r = await fetch("/data/v1/{{year}}/geo/choropleth.json");
    if (r.ok) {
        chart(await r.json())
    }
</script>

<script type="module">
    import * as Plot from "https://cdn.jsdelivr.net/npm/@observablehq/plot@0.6/+esm";

    const chart = (data, countries) => document.getElementById("map-beaches").appendChild(
            Plot.plot(
                    {
                        projection: {
                            type: "mercator",
                            domain: {
                                type: "MultiPoint",
                                coordinates: [[-6, 49.9], [1.8, 55.9]],
                            },
                        },
                        width: 800,
                        r: {range: [10, 45], domain: [100, 8700]},
                        color: {
                            type: "linear",
                            range: ["steelblue", "#b47846"] // uses d3.interpolateRgb
                        },
                        marks: [
                            Plot.geo(
                                    countries,
                                    {
                                        fill: "rgb(5,118,11)",
                                        fillOpacity: 0.1,
                                        stroke: "#000000",
                                        strokeWidth: 2,
                                        strokeOpacity: 0.2,
                                    }
                            ),
                            Plot.dot(
                                    data,
                                    {
                                        x: "lon",
                                        y: "lat",
                                        r: "total_spill_hours",
                                        fill: "total_spill_hours",
                                        opacity: 0.5,
                                        mixBlendMode: "multiply",
                                        title: d => `${d.bathing} - ${d.total_spill_hours} hours of sewage in {{year}}`,
                                    }
                            )
                        ]
                    }
            )
    )

    const beaches = await fetch("/data/v1/{{year}}/spills-by-beach.json");
    const countries = await fetch("/data/v1/{{year}}/geo/countries.json")
    if (beaches.ok && countries.ok) {
        chart(await beaches.json(), await countries.json())
    }
</script>


<script type="module">
    import * as Plot from "https://cdn.jsdelivr.net/npm/@observablehq/plot@0.6/+esm";

    const chart = (data, countries) => document.getElementById("map-shellfish").appendChild(
            Plot.plot(
                    {
                        projection: {
                            type: "mercator",
                            domain: {
                                type: "MultiPoint",
                                coordinates: [[-6, 49.9], [1.8, 55.9]],
                            },
                        },
                        width: 800,
                        r: {range: [10, 45], domain: [100, 8700]},
                        color: {
                            type: "linear",
                            range: ["#8e2353", "#b47846"] // uses d3.interpolateRgb
                        },
                        marks: [
                            Plot.geo(
                                    countries,
                                    {
                                        fill: "rgb(77,5,118)",
                                        fillOpacity: 0.1,
                                        stroke: "#000000",
                                        strokeWidth: 2,
                                        strokeOpacity: 0.2,
                                    }
                            ),
                            Plot.dot(
                                    data,
                                    {
                                        x: "lon",
                                        y: "lat",
                                        r: "total_spill_hours",
                                        fill: "total_spill_hours",
                                        opacity: 0.5,
                                        mixBlendMode: "multiply",
                                        title: d => `${d.shellfishery} - ${d.total_spill_hours} hours of sewage in {{year}}`,
                                    }
                            )
                        ]
                    }
            )
    )

    const shellfish = await fetch("/data/v1/{{year}}/spills-by-shellfish.json");
    const countries = await fetch("/data/v1/{{year}}/geo/countries.json")
    if (shellfish.ok && countries.ok) {
        chart(await shellfish.json(), await countries.json())
    }
</script>


</body>
</html>