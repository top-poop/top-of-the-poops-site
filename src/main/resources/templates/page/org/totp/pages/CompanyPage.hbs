<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <title>Top of the Poops | Company | {{ company.name }}</title>
    <meta name="description"
          content="{{ company.name }} polluted waterways {{numberFormat
                  summary.count.count}} times in {{summary.year}}">

    {{> chunks/favicons }}
    {{> chunks/meta-styles }}
    {{> chunks/meta-scripts }}

    {{> components/meta-opengraph
            title=(concat "Company | " company.name)
            twitterImageUri=share.twitterImageUri
    }}

    <meta name="viewport" content="width=device-width, initial-scale=1">

</head>
<body>
{{> chunks/navbar }}

<div class="container-fluid">
    <div class="row justify-content-md-center  align-items-center">
        <div class="col-md-4 offset-md-1">
            <div class="row">
                <div class="col">
                    <div class="display-3">{{ company.name }}</div>

                    <p>was responsible for at least <span
                            class="align-middle display-4 font-weight-bold">{{numberFormat summary.count.count }}</span>
                        sewage overflows in {{ summary.year }}<br/>
                        {{> chunks/explain-count summary.count}} </p>

                    <p>These lasted for {{numberFormat summary.duration.hours}} hours
                        ({{> chunks/explain-duration summary.duration}}) - in
                        {{numberFormat summary.locationCount}} different locations across their service area</p>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    {{> components/share-facebook share}}
                    {{> components/share-twitter share}}
                </div>
            </div>
        </div>

        <div class="col-md-4 ">
            <img style="width: 100%; height: auto; min-height: 300px;" src="{{ csoUri }}"/>
        </div>
    </div>
</div>


{{#eq company.name.value 'Scottish Water'}}
    <div class="container">
    {{#> components/section title="Special Note regarding Scottish Water" }}
        <div class="row">
            <div class="col">
                <p>Scottish Water simply does not monitor the overflows of many of its CSOs, - so <strong>the numbers here are artificially low</strong>, the
                real situation is far worse.</p>
                <p>Of the 702 CSOs locations we know about for Scottish Water, 452 of them have <strong>ZERO</strong> reporting.</p>
            </div>
        </div>
    {{/components/section}}
    </div>
{{/eq}}


{{#if live}}
    <div class="container">

        {{#if live.overflowing}}
            {{#> components/section
                    title=(concat company.name " has " live.overflowing.length " CSOs dumping sewage right now") }}

                <div class="row">
                    <div class="col">
                        <p>Here are the ones that have been overflowing for the longest, without interruption</p>
                        <p>We are getting more data collated for each of the CSOs... right now we just have the Constituency.
                            Unfortunately, the water companies use different names for the CSOs in their live data than in the
                        annual returns, so it will take a bit of time to link all the data up....</p>
                    </div>
                </div>

                <div id="live-csos" class="row row-cols-1 row-cols-md-3">
                    {{#each (take live.overflowing n=9)}}
                        <div class="col mb-4">
                            <div class="card h-100">
                                <div class="card-header bg-primary text-white">{{inc @index}}. {{this.id}}</div>
                                <div class="events  card-body">
                                    <p class="card-title">
                                        <a href="{{this.constituency.uri}}">{{this.constituency.name}}</a>
                                    </p>
                                    <p class="card-text"><small class="text-muted">Started {{ago this.started}}</small>
                                    </p>
                                </div>
                            </div>
                        </div>
                    {{/each}}
                </div>
            {{/components/section}}
        {{/if}}
        {{#> components/section title="How many Sewage Overflows are dumping sewage?" }}
            <div class="row">
                <div class="col">
                    <div class="row">
                        <div class="col">
                            <p>We have live data for {{company.name}} so we can track what happens every day - given
                                that
                                overflows are supposed to happen on an 'exceptional' basis only - does the chart
                                indicate that?</p>

                            <p>The red line indicates the number of CSOs that overflowed for at least 30mins, the grey,
                                the
                                number of CSOs
                                that were offline for at least 30mins, and the blue line is the total number of CSOs
                                that we can get information for.</p>

                            <p>There is daily updated information on all constituencies covered by {{company.name}}</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <div id="edm-spills" class="plot-chart"
                                 data-uri="/live/stream/company/{{company.slug}}/overflow-summary">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        {{/components/section}}
    </div>
    <script type="module">
        import * as Plot from "https://cdn.jsdelivr.net/npm/@observablehq/plot@0.6.14/+esm";

        const PlotDailyEDM = (data, width, height) => Plot.plot({
            marginLeft: 40,
            marginBottom: 30,
            width: width,
            height: height,
            y: {
                grid: true,
                label: "Number of CSOs â†‘",
            },
            x: {
                grid: false,
            },
            marks: [
                Plot.lineY(
                        data,
                        {
                            x: d => new Date(d.date),
                            y: d => d.edm_count,
                            stroke: '#44beff',
                            title: d => `${d.date}: ${d.edm_count} CSOs Monitored`,
                        }
                ),
                Plot.lineY(
                        data,
                        {
                            x: d => new Date(d.date),
                            y: d => d.overflowing,
                            stroke: '#ff4444',
                            title: d => `${d.date}: ${d.overflowing} CSOs Overflowed for 30 mins or more`,
                        }
                ),
                Plot.lineY(
                        data,
                        {
                            x: d => new Date(d.date),
                            y: d => d.offline,
                            stroke: '#bbbbbb',
                            title: d => `${d.date}: ${d.offline} CSOs Offline for 30 mins or more`,
                        }
                ),
            ]
        })

        const div = document.getElementById("edm-spills");
        const rect = div.getBoundingClientRect()
        const response = await fetch(div.attributes["data-uri"].value);
        if (response.ok) {
            div.appendChild(PlotDailyEDM(await response.json(), rect.width, rect.height))
        }
    </script>

{{/if}}

<div class="container">
    <div class="row">
        <div class="col">
            {{#> components/section title="2024 - By Water Company"}}
                <div class="row">
                    <div class="col">
                        <p>How does each water company compare? These are the totals by company for each. The totals are
                            really high, counting things in hours doesn't make
                            it very easy to think about. Here we show how many years of continuous sewage dumps happened
                            in a single year, by water company.</p>
                    </div>
                </div>
                <div class="row mb-5">
                    <div class="col">
                        <div style="height: 300px;" id="plot-company-totals" data-company-name="{{company.name}}"
                             data-uri="/data/v1/2024/spills-by-company.json"></div>
                    </div>
                </div>
            {{/components/section}}
        </div>
    </div>

    <div class="row">
        <div class="col">
            {{#> components/section title="2024 - Asset Spill Duration Comparison"}}

                <div class="row">
                    <div class="col">
                        <p>It isn't like there are just a few outliers... the problem exists across the entire estate of water assets.
                        Here we show a 'cumulative frequency diagram' - where the number of CSOs that dumped sewage for a time, or longer, is shown. You can see that many CSOs dumped sewage into a river for months and months.</p>

                        <p>{{company.name}} is highlighted in the plot below</p>
                    </div>
                </div>

                <div class="row mb-2">
                    <div class="col">
                        <div style="height: 300px;" id="plot-company-comparison" data-company-name="{{company.name}}"
                             data-uri="/data/v1/2024/spills-all.json"></div>
                    </div>
                </div>
            {{/components/section}}
        </div>
    </div>

    <div class="row">
        <div class="col">
            {{#> components/section title=(concat "2024 - Worst Locations " company.name)}}
                <div class="row row-cols-1 row-cols-md-3">
                    {{#each worstCsos}}
                        <div class="col mb-4">
                            <div class="card h-100">
                                <div class="card-header bg-primary text-white">{{inc @index}}. {{this.cso.sitename}}</div>
                                <div class="card-body">
                                    <p class="card-title">
                                        <a href="{{this.constituency.uri}}">{{this.constituency.name}}</a> polluted
                                        for
                                        {{numberFormat this.duration.hours}} hours, into <a
                                            href="{{this.cso.waterway.uri}}">{{this.cso.waterway.name}}</a>
                                    </p>
                                    <p class="card-text">{{numberFormat this.count.count}} incidents</p>

                                    <p class="card-text"><small
                                            class="text-muted"> {{> chunks/explain-duration this.duration}} </small>
                                    </p>
                                    <p class="card-text"><small
                                            class="text-muted"> {{> chunks/explain-count this.count}} </small></p>
                                </div>
                            </div>
                        </div>
                    {{/each}}
                </div>
            {{/components/section}}
        </div>
    </div>
</div>

<script type="module">
    import * as Plot from "https://cdn.jsdelivr.net/npm/@observablehq/plot@0.6.14/+esm";

    const PlotSpillsByCompany = (data, width, height, company_name) => {
        return Plot.plot({
            // marginLeft: 100,
            // marginBottom: 30,
            width: width,
            height: height,
            y: {
                grid: true,
                zero: true,
                label: "Years of Continuous Dumping â†‘",
            },
            color: {
                legend: true
            },
            x: {
                grid: false,
                domain: [2020, 2021, 2022, 2023, 2024],
                tickFormat: d => `${d}`,
            },
            marks: [
                Plot.areaY(
                        data,
                        {
                            x: "reporting_year",
                            y: (d) => d.hours / (750.5 * 12),
                            fill: "company_name",
                            tip: true,
                            opacity: 0.7,
                        }
                ),
            ]
        })
    };

    const PlotSpillsCumulative = (data, width, height, company_name) => {
        return Plot.plot({
            // marginLeft: 100,
            // marginBottom: 30,
            width: width,
            height: height,
            y: {
                grid: true,
                type: "log", base: 10,
                label: "Count of CSOs â†‘",
            },
            x: {
                grid: false,
                type: "log", base: 10,
                label: "Hours of Overflow 2024 â†’",
            },
            color: {
                domain: [false, true],
                range: ["#ccc", "red"]
            },
            marks: [
                Plot.line(
                        data.filter(d => d["total_spill_hours"] > 0),
                        Plot.binX(
                                {y: "count", filter: null},
                                {
                                    thresholds: [1, 168 * 0.5, 168 * 1, 168 * 2, 168 * 3,
                                        1 * 730, 1.5 * 730, 2 * 730, 2.5 * 750, 3 * 730, 4 * 730, 5 * 730,
                                        6 * 730, 7 * 730, 8 * 730, 9 * 730, 10 * 730, 11 * 730, 12 * 730],

                                    z: "company_name",
                                    cumulative: -1,
                                    x: "total_spill_hours",
                                    stroke: (d) => d.company_name === company_name,
                                    sort: (d) => d.company_name === company_name ? 1 : 0
                                })
                ),
                Plot.dot(
                        data,
                        Plot.binX(
                                {y: "count", filter: null},
                                {
                                    thresholds: [1, 168 * 0.5, 168 * 1, 168 * 2, 168 * 3,
                                        1 * 730, 1.5 * 730, 2 * 730, 2.5 * 750, 3 * 730, 4 * 730, 5 * 730,
                                        6 * 730, 7 * 730, 8 * 730, 9 * 730, 10 * 730, 11 * 730, 12 * 730],
                                    z: "company_name",
                                    cumulative: -1,
                                    x: "total_spill_hours",
                                    stroke: (d) => d.company_name === company_name,
                                    sort: (d) => d.company_name === company_name ? 1 : 0,
                                    opacity: 0.7,
                                    title: (d) => d.company_name,
                                    tip: true,
                                })
                ),
                Plot.ruleX(
                        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                        {
                            stroke: "red",
                            opacity: 0.4,
                            x: d => d * 730,
                        }
                ),
                Plot.text(
                        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                        {
                            text: d => `${d} m`,
                            //textAnchor: "end",
                            rotate: 45,
                            x: d => d * 730,
                            y: 2000,
                        }
                )
            ]
        })
    };

    const div = document.getElementById("plot-company-totals");
    const response = await fetch(div.attributes["data-uri"].value);
    const rect = div.getBoundingClientRect()
    if (response.ok) {
        div.appendChild(PlotSpillsByCompany(await response.json(), rect.width, rect.height, div.attributes["data-company-name"].value))
    }

    const divc = document.getElementById("plot-company-comparison");
    const responsec = await fetch(divc.attributes["data-uri"].value);
    const rectc = divc.getBoundingClientRect()
    if (responsec.ok) {
        divc.appendChild(PlotSpillsCumulative(await responsec.json(), rectc.width, rectc.height, divc.attributes["data-company-name"].value))
    }

</script>

<div class="container">
    <div class="row">
        <div class="col">
            {{#> components/section title=(concat "2024 - Rivers Polluted by " company.name)}}
                <div class="row row-cols-1 row-cols-md-3">
                    {{#each rivers}}
                        <a class="quiet-link" href="{{this.river.uri}}">
                            <div class="col mb-4">
                                <div class="card h-100">
                                    <div class="card-header bg-primary text-white">{{inc @index}}. {{this.river.name}}</div>
                                    <div class="card-body">
                                        <h5 class="card-title">{{numberFormat this.duration.hours}} hours</h5>
                                        <p class="card-text"><small class="text-muted">
                                            {{> chunks/explain-duration this.duration}}
                                        </small></p>
                                        <p class="card-text">{{numberFormat this.count.count}} incidents</p>
                                        <p class="card-text"><small class="text-muted">
                                            {{> chunks/explain-count this.count}}
                                        </small></p>
                                    </div>
                                </div>
                            </div>
                        </a>
                    {{/each}}
                </div>
            {{/components/section}}
        </div>
    </div>
</div>

{{#if beaches}}
    <div class="container">
        <div class="row">
            <div class="col">
                {{#> components/section title=(concat "2024 - Beaches Polluted by " company.name)}}
                    <div class="row row-cols-1 row-cols-md-3">
                        {{#each beaches}}
                            <a class="quiet-link" href="{{this.beach.uri}}">
                                <div class="col mb-4">
                                    <div class="card h-100">
                                        <div class="card-header bg-primary text-white">{{inc @index}}. {{this.beach.name}}</div>
                                        <div class="card-body">
                                            <h5 class="card-title">{{numberFormat this.duration.hours}} hours</h5>
                                            <p class="card-text"><small class="text-muted">
                                                {{> chunks/explain-duration this.duration}}
                                            </small></p>
                                            <p class="card-text">{{numberFormat this.count.count}} incidents</p>
                                            <p class="card-text"><small class="text-muted">
                                                {{> chunks/explain-count this.count}}
                                            </small></p>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        {{/each}}
                    </div>
                {{/components/section}}
            </div>
        </div>
    </div>
{{/if}}

<div class="container">
    <div class="row">
        <div class="col">
            {{#> components/section title="Water Companies" }}
            {{/components/section}}
        </div>
    </div>

    <div class="row row-cols-1 row-cols-md-4">
        {{#each links}}
            <div class="col-sm-4 col-lg-3 mb-4">
                {{> components/card-company this.company}}
            </div>
        {{/each}}
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col">{{> chunks/data-sources }}</div>
    </div>
</div>

{{> chunks/footer }}

</body>
</html>
