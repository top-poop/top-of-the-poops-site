worker_processes  auto;
error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections  4096;
}

http {
  include    mime.types;
  index    index.html ;
  server_tokens off;

  default_type application/octet-stream;
  log_format logger-json escape=json '{ "source": "nginx", "metadata.service": "nginx-tls", "metadata.name": "Incoming", "time": $msec, "resp_body_size": $body_bytes_sent, "host": "$http_host", "address": "$remote_addr", "request_length": $request_length, "event.method": "$request_method", "event.uri": "$request_uri", "event.status": $status, "user_agent": "$http_user_agent", "resp_time": $request_time, "ua": "$upstream_addr", "us": "$upstream_status", "ut": "$upstream_response_time", "ul": "$upstream_response_length", "cs": "$upstream_cache_status", "referrer": "$http_referer", "country_iso": "$geoip2_data_country_code" }';

  access_log   /var/log/nginx/access.log  logger-json;
  sendfile     on;
  tcp_nopush   on;
  server_names_hash_bucket_size 128;

  # Stop bad client posts
  client_body_buffer_size 1K;
  client_header_buffer_size 1k;
  client_max_body_size 1k;
  large_client_header_buffers 2 1k;


  proxy_buffers 8 256k;
  proxy_busy_buffers_size 256k;

  http2_max_concurrent_streams 256;

  upstream upstream {
    server 10.50.0.1:8080;
    keepalive 128;
  }

  # Docker DNS
  resolver 127.0.0.11;

  geoip2 /etc/GeoLite2-Country.mmdb {
          $geoip2_metadata_country_build metadata build_epoch;
          $geoip2_data_country_code default=Unknown source=$remote_addr country iso_code;
  }

  map $geoip2_data_country_code $allowed_country {
    default yes;
    KR no;
    SG no;
    CN no;
    RU no;
 }

  # Traffic without/non-matching Host header
  server {
    listen       80;
    listen     [::]:80;

    server_name default;

    access_log off;

    location / {
        return 404;
    }
  }

  # Only for certbot & http->https
  server {
    listen       80;
    listen     [::]:80;

    server_name v2.top-of-the-poops.org top-of-the-poops.org www.top-of-the-poops.org;

    location ~ /.well-known/acme-challenge {
        proxy_cache off;
        allow all;
        root /webroots/totp;
    }

    location / {
        return 301 https://$host$request_uri;
    }
  }

  # Private access pre SSL configuration
  server {
    listen 8081;
    listen [::]:8081;

    location / {
       proxy_pass  http://upstream;
    }
  }

  server {
      listen 443 ssl;
      http2 on;
      ssl_certificate       /etc/nginx/default.crt;
      ssl_certificate_key   /etc/nginx/default.key;

      access_log off;
      server_name default-ssl;

      return 444;
  }

  server {
    listen 443 ssl;
    http2 on;

    server_name top-of-the-poops.org www.top-of-the-poops.org;

	ssl_certificate /etc/letsencrypt/live/top-of-the-poops.org/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/top-of-the-poops.org/privkey.pem;

    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    add_header Strict-Transport-Security "max-age=63072000" always;

    keepalive_timeout 30;
    keepalive_requests 100;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # So bored with bad bots
    if ($allowed_country = no) {
        return 444;
    }

    location /wp-content {
        return 444;
    }

    location ~ \.(php|env)$ {
        return 444;
    }

    location / {
      proxy_pass  http://upstream;
      proxy_http_version 1.1;
      proxy_set_header Connection "";

  proxy_set_header Host $host;
  proxy_set_header X-Forwarded-Host $host;
  proxy_set_header X-Forwarded-For $remote_addr;
  proxy_set_header X-Forwarded-Proto $scheme;

      proxy_buffering on;
    }

#     maintenance block
#    location / {
#      return 503;
#    }

#    error_page 503 /maint.html;

#    location = /maint.html  {
#        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
#        add_header Pragma "no-cache" always;
#        add_header Expires 0 always;
#        add_header Retry-After 3600 always;
#        root /maint;
#        try_files /maint.html =503;
#    }
 #   maintenance block end
  }
}
